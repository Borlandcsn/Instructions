Git — система контроля версия, используемая для совместной работы с кодом.
Репозиторий — место, где хранятся и поддерживаются какие-либо данные.
Commit, коммит — операция, которая отправляет последние изменения исходного кода в репозиторий.
Ветка, Бранч — отдельная версия кода, ответвление от основной версии.
GitFlow — модель ветвления в git.
Инициализируем репозиторий
git init
Создаем тестовый файл (test.txt) в папке
Проверяем статус git`а
git status
Видим наш файл в статусе не отслеживаемый
Добавим его в отслеживание и проверим статус повторно
git add test.txt
git status
Все отлично, теперь сделаем коммит
git commit -am “new test file”
Смотрим статус
git status
Посмотрим список веток
git branch
Создадим новую ветку и переключимся на нее
git branch dev
git checkout dev
Создадим новый файл (dev.txt) и добавим его в отслеживаемые
git add dev.txt
Чтобы добавить все файлы в данной директории: git add .
Сделаем коммит
git commit -am “new dev file”
Посмотрим список файлов, переключимся на ветку master и еще раз проверим список файлов
ls
git checkout master
ls
Список файлов изменился
Протегируем ветку master
git tag “v.0.1”
Создаем репозиторий в gitlab
Клонируем репозиторий
git clone <url>
Создаем ветку в веб-интерфейсе
Смотрим ее: git branch -a
Создаем файл, коммитим, пушим
git push
Добавить еще один файл и сделать пуш с созданием мердж реквеста
git push -o merge_request.create
Теперь решим конфликт. Изменим файлы через вебинтерфейс
Попробуем запушить изменения. Конфликт.
git fetch
git rebase origin/main
Правим файлы (оставляем необходимые изменения)
git add .
git commit -am “fix merge conflict”
git rebase --continue
git push
